concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.ref }}
jobs:
  validate_commit_message:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - continue-on-error: true
      name: Validate commit title
      run: "# Check that the commit title isn't excessively long.\ncommit_title=\"\
        $(git log -1 --pretty=format:'%s')\"\nif [ \"${#commit_title}\" -gt 120 ];\
        \ then\n  echo \"Error: the title of the commit is too long (max: 120 characters)\"\
        \n  exit 1\nfi\n\nlowercase_title=\"$(echo $commit_title | awk '{print tolower($0)}')\"\
        \n# Check that the commit title isn't 'internal' (ignore case)\nif [ \"$lowercase_title\"\
        \ = \"internal\" ]; then\n  echo \"Error: '$commit_title' is not a valid commit\
        \ title\"\n  exit 1\nfi\n"
    - continue-on-error: true
      name: Validate commit body
      run: "# Check that the commit has a body\ncommit_body=\"$(git log -1 --pretty=format:'%b'\
        \ | grep -v 'PiperOrigin-RevId')\"\nif [ -z \"$commit_body\" ]; then\n  echo\
        \ \"Error: the commit should have a descriptive body\"\n  exit 1\nfi\n\nwhile\
        \ read -r line; do\n  if [ \"${#line}\" -gt 120 ] && [[ ! \"$line\" =~ (https?://|www\\\
        .) ]]; then\n    echo \"Error: the following line of the commit body is too\
        \ long (max: 120 characters):\"\n    echo \"> $line\"\n    exit 1\n  fi\n\
        done <<< $commit_body\n"
name: Validate commit message
on:
  repository_dispatch:
    types: trigger-ga___validate_commit_message.yml
permissions:
  contents: read
