concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.ref }}
env:
  cache-version: v1
jobs:
  build:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: adopt
        java-version: 17
    - continue-on-error: true
      uses: gradle/actions/setup-gradle@v3
    - continue-on-error: true
      name: Build
      run: 'SKIP_ERRORPRONE=true SKIP_JAVADOC=true \

        ./gradlew assemble testClasses --parallel --stacktrace --no-watch-fs

        '
  instrumentation-tests:
    needs: build
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Free disk space
      uses: jlumbroso/free-disk-space@v1.3.1
      with:
        android: false
        tool-cache: true
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: adopt
        java-version: 17
    - continue-on-error: true
      uses: gradle/actions/setup-gradle@v3
    - continue-on-error: true
      name: Enable KVM group perms
      run: 'echo ''KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"''
        | sudo tee /etc/udev/rules.d/99-kvm4all.rules

        sudo udevadm control --reload-rules

        sudo udevadm trigger --name-match=kvm

        '
    - continue-on-error: true
      id: determine-target
      name: Determine emulator target
      run: "TARGET=\"google_apis\"\nif [[ ${{ matrix.api-level }} -ge 34 ]]; then\n\
        \  TARGET=\"aosp_atd\"\nfi\necho \"TARGET=$TARGET\" >> $GITHUB_OUTPUT\n"
    - continue-on-error: true
      id: avd-cache
      name: AVD cache
      uses: actions/cache@v4
      with:
        key: avd-ubuntu-${{ matrix.api-level }}-${{ env.cache-version }}
        path: '~/.android/avd/*

          ~/.android/adb*

          '
    - continue-on-error: true
      if: steps.avd-cache.outputs.cache-hit != 'true'
      name: Create AVD and generate snapshot for caching
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: ${{ matrix.api-level }}
        arch: x86_64
        disable-animations: true
        emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim
          -camera-back none
        force-avd-creation: false
        script: echo "Generated AVD snapshot for caching."
        target: ${{ steps.determine-target.outputs.TARGET }}
    - continue-on-error: true
      name: Run device tests
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: ${{ matrix.api-level }}
        arch: x86_64
        disable-animations: true
        emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio
          -no-boot-anim -camera-back none
        force-avd-creation: false
        profile: Nexus One
        script: 'adb shell wm density 240

          SKIP_ERRORPRONE=true SKIP_JAVADOC=true ./gradlew cAT --info --stacktrace
          --no-watch-fs -Dorg.gradle.workers.max=2

          '
        target: ${{ steps.determine-target.outputs.TARGET }}
    - continue-on-error: true
      if: always()
      name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.api-level }}-${{ steps.determine-target.outputs.TARGET
          }}-${{ matrix.shard }}
        path: '**/build/reports/*

          **/build/outputs/*/connected/*

          '
    strategy:
      fail-fast: false
      matrix:
        api-level:
        - 29
        - 34
    timeout-minutes: 60
  publish-to-snapshots:
    env:
      SONATYPE_LOGIN: ${{ secrets.SONATYPE_LOGIN }}
      SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
    if: github.ref == 'refs/heads/master'
    needs: unit-tests
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: adopt
        java-version: 17
    - continue-on-error: true
      uses: gradle/actions/setup-gradle@v3
    - continue-on-error: true
      name: Publish
      run: './gradlew publish --stacktrace --no-watch-fs

        '
  unit-tests:
    needs: build
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: adopt
        java-version: 17
    - continue-on-error: true
      uses: gradle/actions/setup-gradle@v3
    - continue-on-error: true
      name: Run unit tests
      run: 'SKIP_ERRORPRONE=true SKIP_JAVADOC=true ./gradlew test \

        --info --stacktrace --continue \

        --parallel \

        --no-watch-fs \

        -Drobolectric.enabledSdks=${{ matrix.api-versions }} \

        -Drobolectric.alwaysIncludeVariantMarkersInTestName=true \

        -Dorg.gradle.workers.max=2 \

        -x :integration_tests:nativegraphics:test \

        -x :integration_tests:roborazzi:test

        '
    - continue-on-error: true
      if: always()
      name: Upload Test Results
      uses: actions/upload-artifact@v4
      with:
        name: test_results_${{ matrix.api-versions }}
        path: '**/build/test-results/**/TEST-*.xml'
    strategy:
      fail-fast: false
      matrix:
        api-versions:
        - 21,34
        - 22,23,33
        - 24,25,32
        - 26,27,28
        - 29,30,31
name: Tests
on:
  repository_dispatch:
    types: trigger-ga___tests.yml
permissions:
  contents: read
